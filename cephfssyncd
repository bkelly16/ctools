#!/bin/bash
# Brett Kelly

mkdir -p /var/lib/ceph/cephfssync/
source ~/.cephfs/cephfssyncd.conf

## CHECKS
# check cluster membership & permission
# check cephfs is mounted.
# check recv'r connection
# check recv FS exists and is writable
# turn on snapshots

## FUNCTIONS
getrctime(){
    # getrctime <directory> <1||2>
    local ctime=$(getfattr --absolute-names -n ceph.dir.rctime $1 --only-values | cut -d. -f$2)
    echo "$ctime"
}
getsubdirs(){
    # getsubdir <directory> 
    local subdir=$(getfattr --absolute-names -n ceph.dir.subdir $1 --only-values)
    echo "$subdir"
}
getfiles(){
    # getfiles <directory> 
    local subdir=$(getfattr --absolute-names -n ceph.dir.files $1 --only-values)
    echo "$iles"
}
takesnap(){
    local RCTIME_1=$1
    SND_SYNC_SNAP_DIR="$SND_SYNC_DIR/.snap/sync_$RCTIME_1"
    mkdir $SND_SYNC_SNAP_DIR
    echo $SND_SYNC_SNAP_DIR
}
removesnap(){
    # FOR DEV ONLY
    # IN PRACTISE ONLY REMOVE SNAP AFTER RSYNC TASK IS FINISHED
    local SND_SYNC_SNAP_DIR=$1
    rmdir $SND_SYNC_SNAP_DIR
    echo $?
}
formattime(){
    local EPOCH=$1
    local TIME=$(date -d @$EPOCH '+%Y-%m-%d %H:%M:%S')
    echo $TIME
}
log(){
    # log <message> <log_level>
    if [  "$2" -lt $(( LOG_LEVEL + 1 )) ];then
            echo $1
    fi
}
main(){
    local RCTIME_0=$1
    local DIR=$2
    for dir in $DIR/*;do
        if [ -d $dir ];then
            local RCTIME_2=$(getrctime $dir 1)
            log "parent:$(formattime $RCTIME_0) dir:$(formattime $RCTIME_2):$dir" 2 
            if [ "$RCTIME_2" -eq "$RCTIME_0" ];then
                log "CHANGE DETECTED IN $dir" 0
                cephfssync $dir $RECV_SYNC_HOST $LOG_LEVEL &
                main $RCTIME_0 $dir
            elif [ "$RCTIME_2" -lt "$RCTIME_0" ];then
                log "NO CHANGE DETECTED IN $dir OR BELOW" 1
            elif [ "$RCTIME_2" -gt "$RCTIME_0" ];then
                log "$dir WAS MODIFIED AFTER STARTING CHECK. WAIT FOR NEXT CYCLE" 0
            fi
        fi
    done
}

# START HERE
log "started" 0
while sleep $SYNC_FREQ ; do
    log "scanning : $SND_SYNC_DIR" 1
    ### Every SYNC_FREQ seconds daemon will check for changes.
    ## 
    # IF THERE IS NO PAST RCTIME THE ASSUME ZER0
    # SETTING RCTIME_0 TO ZERO WILL TRIGGER A SYNC OF THE WHOLE FS
    # SETTING IT TO THE CURRENT RCTIME 
    # OF THE TOP LEVEL DIR WILL START SUBDIR SYNCS ASYNCHROUNSLY WHEN CHANGES OCCUR
    # RECOMMENDED TO LET A FULL SYNC GO FOR FRIST RUN (i.e RCTIME_0=0)  
    if [ -e /var/lib/ceph/cephfssync/last_rctime ];then
        log "last_rctime exists, init RCTIME=last_rctime" 2
        RCTIME_0=$(cat /var/lib/ceph/cephfssync/last_rctime)
    else
        log "last_rctime does not exist, init RCTIME=0" 2
        RCTIME_0=0
        echo "$RCTIME_0" > /var/lib/ceph/cephfssync/last_rctime
    fi
    log "rctime_0 : $RCTIME_0 " 2

    RCTIME_1=$(getrctime $SND_SYNC_DIR 1)
    echo "$RCTIME_1" > /var/lib/ceph/cephfssync/last_rctime
    log "rctime_1 : $RCTIME_1 " 2
    
    if [ "$RCTIME_1" -gt "$RCTIME_0" ];then
        cephfssync $SND_SYNC_DIR $RECV_SYNC_HOST $LOG_LEVEL &
        main $RCTIME_1 $SND_SYNC_DIR
    fi

    # If changes were detected kick off parallel rsync of that dir to the recv
    # If directory is already currently syncing dont start again
    # Dont start too many rsync tasks. Limit to CPU core
    #     cpu_count=$(cat /proc/cpuinfo|grep processor | wc -l)
    #     let max_threads=cpu_count*30
done


